source:
  file:
    name: orders
    type: csv
    desc: "csv file containing order data"
    fields:
      - name: 'Order Number'
        type: 'string'
        test: "not(regexp_like(`Order Number`, '^[0-9]+'))"
        error: 'Order Number must be a valid number'
        desc: 'Unique number of the order'
      - name: 'Year'
        type: 'string'
        test: "not(regexp_like(Year, '^[0-9]+')) or Year not between 1900 and 2100"
        error: 'Year must be valid number and between 1900 and 2100'
        desc: 'Year of order in YYYY format'
      - name: 'Month'
        type: 'string'
        test: "not(regexp_like(Month, '^[0-9]+')) or Month not between 1 and 12"
        error: 'Year must be valid number and between 1900 and 2100'
        desc: 'Month of order in MM format'
      - name: 'Day'
        type: 'string'
        test: "not(regexp_like(Day, '^[0-9]+')) or Day not between 1 and 31"
        error: 'Year must be valid number and between 1900 and 2100'
        desc: 'Day of order in dd format'
      - name: 'Product Number'
        type: 'string'
        desc: 'Number identifier of the product'
      - name: 'Product Name'
        type: 'string'
        desc: 'Name of the product'
      - name: 'Count'
        type: 'string'
        test: 'Count is null'
        error: 'Count cannot be NULL'
        desc: 'Product count'

target:
  schema:
    name: orders
    desc: "Schema containing order data"
    fields:
      - name: OrderID
        type: int
        source: "`Order Number`"
        desc: 'Unique ID of the order'
      - name: OrderDate
        type: date
        source: "to_date(concat_ws('-',Year,Month,Day))"
        desc: 'Date of the order'
      - name: ProductId
        type: string
        source: "`Product Number`"
        desc: 'Unique ID of the Product'
      - name: ProductName
        type: string
        source: "`Product Name`"
        desc: 'Name of the product'
      - name: Quantity
        type: decimal(10,2)
        source: "regexp_replace(Count,',','')"
        desc: 'Product quantity'
      - name: Unit
        type: string
        source: "'kg'"
        desc: 'Product unit measured in kg'